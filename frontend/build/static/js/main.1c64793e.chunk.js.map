{"version":3,"sources":["components/Footer.js","constants/userConstants.js","actions/userActions.js","components/Header.js","images/background1.jpeg","screens/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/CreateNote.js","screens/SingleNote.js","screens/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","href","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","bg","expand","variant","Brand","to","Toggle","aria-controls","Collapse","id","Nav","Form","FormControl","placeholder","aria-label","onChange","e","target","value","maxHeight","navbarScroll","Link","NavDropdown","title","Item","Divider","onClick","removeItem","push","Landing","styled","div","BackgroundImage","IntroText","Title","h1","SubTitle","p","ButtonContainer","LandingPage","getItem","ButtonStyle","height","Button","size","MainBack","Page","Heading","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","alignItems","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","error","notes","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","params","updatedAt","fetching","put","updateNoteAction","ProfileImage","img","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","initialState","parse","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c64793e.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nfunction Footer() {\n  return (\n    <footer\n      style={{\n        width: '100%',\n        position: 'relative',\n        bottom: 0,\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">\n            Copyright &copy; <a href=\"https://iamsuyash.dev/\">iamsuyash.dev</a>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('/api/users/profile', user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from 'react';\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../actions/userActions';\nfunction Header({ setSearch }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push('/');\n  };\n\n  useEffect(() => {}, [userInfo]);\n  return (\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <Link to=\"/\">Note Zipper</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form className=\"d-flex\">\n                <FormControl\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  className=\"mr-2\"\n                  aria-label=\"Search\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n\n          <Nav style={{ maxHeight: '100px' }} navbarScroll>\n            {userInfo && (\n              <>\n                <Nav.Link>\n                  <Link to=\"mynotes\">My Notes</Link>\n                </Nav.Link>\n                <NavDropdown\n                  title={userInfo?.name}\n                  id=\"navbarScrollingDropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    My Profile\n                  </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/background1.8369ba11.jpeg\";","import React, { useEffect } from 'react';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport BackgroundImage from '../images/background1.jpeg';\n\nfunction LandingPage({ history }) {\n  useEffect(() => {\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      history.push('/mynotes');\n    }\n  }, [history]);\n  const ButtonStyle = {\n    width: '200px',\n    height: '55px',\n    '@media (max-width: 500px)': {\n      width: '150px',\n      height: '50px',\n    },\n  };\n  return (\n    <Landing>\n      <Container>\n        <Row>\n          <IntroText>\n            <div>\n              <Title>Welcome to Note Zipper</Title>\n              <SubTitle>One Safe place for all your notes.</SubTitle>\n            </div>\n            <div>\n              <ButtonContainer>\n                <a href=\"/login\">\n                  <Button size=\"lg\" style={ButtonStyle}>\n                    Login\n                  </Button>\n                </a>\n                <a href=\"/register\">\n                  <Button\n                    size=\"lg\"\n                    style={ButtonStyle}\n                    variant=\"outline-primary\"\n                  >\n                    SignUp\n                  </Button>\n                </a>\n              </ButtonContainer>\n            </div>\n          </IntroText>\n        </Row>\n      </Container>\n    </Landing>\n  );\n}\nconst Landing = styled.div`\n  min-height: 87vh;\n  display: flex;\n  align-items: center;\n  background-image: url(${BackgroundImage});\n  background-position: center;\n  background-size: cover;\n`;\nconst IntroText = styled.div`\n  width: 100%;\n  text-align: center;\n`;\nconst Title = styled.h1`\n  font-size: 95px;\n  @media only screen and (min-width: 1200px) {\n    padding: 0 100px;\n  }\n  @media only screen and (max-width: 768px) {\n    font-size: 60px;\n  }\n`;\nconst SubTitle = styled.p`\n  font-size: 25px;\n  padding-top: 10px;\n`;\nconst ButtonContainer = styled.div`\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-evenly;\n  @media only screen and (min-width: 1200px) {\n    padding: 0 200px;\n  }\n`;\nexport default LandingPage;\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nfunction MainScreen({ title, children }) {\n  return (\n    <MainBack>\n      <Container>\n        <Row>\n          <Page>\n            {title && (\n              <>\n                <Heading>{title}</Heading>\n                <hr />\n              </>\n            )}\n            {children}\n          </Page>\n        </Row>\n      </Container>\n    </MainBack>\n  );\n}\nconst MainBack = styled.div`\n  min-height: 87vh;\n  display: flex;\n  padding: 10px 0;\n`;\nconst Page = styled.div`\n  width: 100%;\n`;\nconst Heading = styled.h1`\n  font-size: 60px;\n  font-family: 'Work Sans', sans-serif;\n  padding: 5px 10px;\n  @media only screen and (max-width: 600px) {\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = 'NOTES_LIST_REQUEST';\nexport const NOTES_LIST_SUCCESS = 'NOTES_LIST_SUCCESS';\nexport const NOTES_LIST_FAIL = 'NOTES_LIST_FAIL';\n\nexport const NOTES_CREATE_REQUEST = 'NOTES_CREATE_REQUEST';\nexport const NOTES_CREATE_SUCCESS = 'NOTES_CREATE_SUCCESS';\nexport const NOTES_CREATE_FAIL = 'NOTES_CREATE_FAIL';\n\nexport const NOTES_UPDATE_REQUEST = 'NOTES_UPDATE_REQUEST';\nexport const NOTES_UPDATE_SUCCESS = 'NOTES_UPDATE_SUCCESS';\nexport const NOTES_UPDATE_FAIL = 'NOTES_UPDATE_FAIL';\n\nexport const NOTES_DELETE_REQUEST = 'NOTES_DELETE_REQUEST';\nexport const NOTES_DELETE_SUCCESS = 'NOTES_DELETE_SUCCESS';\nexport const NOTES_DELETE_FAIL = 'NOTES_DELETE_FAIL';\n","import axios from 'axios';\nimport {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from '../constants/notesConstants';\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\nexport const createNoteAction =\n  (title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_CREATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/notes/create`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\nexport const updateNoteAction =\n  (id, title, content, category) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: NOTES_UPDATE_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/notes/${id}`,\n        { title, content, category },\n        config\n      );\n\n      dispatch({\n        type: NOTES_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: NOTES_UPDATE_FAIL,\n        payload: message,\n      });\n    }\n  };\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst ErrorMessage = ({ variant = 'info', children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from 'react';\nimport { Accordion, Badge, Button, Card, Container } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport MainScreen from '../components/MainScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteNoteAction, listNotes } from '../actions/notesActions';\nimport Loading from '../components/Loading';\nimport ErrorMessage from '../components/ErrorMessage';\nfunction MyNotes({ search }) {\n  const dispatch = useDispatch();\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes } = noteList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successCreate,\n    successUpdate,\n    successDelete,\n  ]);\n  return (\n    <Container>\n      <MainScreen title={`Welcome Back ${userInfo.name}..`}>\n        <Link to=\"createnote\">\n          <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n            CREATE NEW NOTE\n          </Button>\n        </Link>\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {errorDelete && (\n          <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n        )}\n        {loading && <Loading />}\n        {loadingDelete && <Loading />}\n        {notes\n          ?.filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion key={note._id}>\n              <Card style={{ margin: 10 }}>\n                <Card.Header style={{ display: 'flex' }}>\n                  <span\n                    style={{\n                      color: 'black',\n                      textDecoration: 'none',\n                      flex: 1,\n                      cursor: 'pointer',\n                      alignSelf: 'center',\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n                  <div>\n                    <Button href={`/note/${note._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge variant=\"success\">\n                        Category - {note.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <p>{note.content}</p>\n                      <footer className=\"blockquote-footer\">\n                        Created on{' '}\n                        <cite title=\"Source Title\">\n                          {note.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n      </MainScreen>\n    </Container>\n  );\n}\n\nexport default MyNotes;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport MainScreen from '../components/MainScreen';\nimport Loading from '../components/Loading';\nimport ErrorMessage from '../components/ErrorMessage';\nimport { login } from '../actions/userActions';\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/mynotes');\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n  return (\n    <Container>\n      <MainScreen title=\"LOGIN\">\n        <loginContainer>\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n          {loading && <Loading />}\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n          <Row className=\"py-3\">\n            <Col>\n              New Member ? <Link to=\"/register\">Register Here</Link>\n            </Col>\n          </Row>\n        </loginContainer>\n      </MainScreen>\n    </Container>\n  );\n}\nconst loginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nexport default LoginScreen;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport MainScreen from '../components/MainScreen';\nimport styled from 'styled-components';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Loading from '../components/Loading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../actions/userActions';\n\nfunction RegisterScreen() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [pic, setPic] = useState(\n    'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\n  );\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const history = useHistory();\n\n  const postDetails = (pics) => {\n    if (!pics) {\n      return setPicMessage('Please Select an Image');\n    }\n    setPicMessage(null);\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'notezipper');\n      data.append('cloud_name', 'iamsuyash');\n      fetch('https://api.cloudinary.com/v1_1/iamsuyash/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage('Please Select an Image');\n    }\n  };\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/mynotes');\n    }\n  }, [history, userInfo]);\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmpassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password, pic));\n    }\n  };\n  return (\n    <Container>\n      <MainScreen title=\"REGISTER\">\n        <loginContainer>\n          {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n          {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n          {loading && <Loading />}\n\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                value={name}\n                placeholder=\"Enter name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={confirmpassword}\n                placeholder=\"Confirm Password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </Form.Group>\n            {picMessage && (\n              <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"pic\">\n              <Form.Label>Profile Picture</Form.Label>\n              <Form.File\n                onChange={(e) => postDetails(e.target.files[0])}\n                id=\"custom-file\"\n                type=\"image/png\"\n                label=\"Upload Profile Picture\"\n                custom\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Register\n            </Button>\n          </Form>\n          <Row className=\"py-3\">\n            <Col>\n              Have an Account ? <Link to=\"/login\">Login</Link>\n            </Col>\n          </Row>\n        </loginContainer>\n      </MainScreen>\n    </Container>\n  );\n}\nconst loginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nexport default RegisterScreen;\n","import React, { useEffect, useState } from 'react';\nimport MainScreen from '../components/MainScreen';\nimport { Button, Card, Container, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createNoteAction } from '../actions/notesActions';\nimport Loading from '../components/Loading';\nimport ErrorMessage from '../components/ErrorMessage';\nimport ReactMarkdown from 'react-markdown';\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [category, setCategory] = useState('');\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle('');\n    setCategory('');\n    setContent('');\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!title || !content || !category) return;\n    dispatch(createNoteAction(title, content, category));\n\n    resetHandler();\n    history.push('/mynotes');\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <Container>\n      <MainScreen title=\"Create a Note\">\n        <Card>\n          <Card.Header>Create a new Note</Card.Header>\n          <Card.Body>\n            <Form onSubmit={submitHandler}>\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  type=\"title\"\n                  value={title}\n                  placeholder=\"Enter the title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"content\">\n                <Form.Label>Content</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  value={content}\n                  placeholder=\"Enter the content\"\n                  rows={4}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </Form.Group>\n              {content && (\n                <Card>\n                  <Card.Header>Note Preview</Card.Header>\n                  <Card.Body>\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                  </Card.Body>\n                </Card>\n              )}\n\n              <Form.Group controlId=\"content\">\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type=\"content\"\n                  value={category}\n                  placeholder=\"Enter the Category\"\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Form.Group>\n              {loading && <Loading size={50} />}\n              <Button type=\"submit\" variant=\"primary\">\n                Create Note\n              </Button>\n              <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n                Reset Feilds\n              </Button>\n            </Form>\n          </Card.Body>\n\n          <Card.Footer className=\"text-muted\">\n            Creating on - {new Date().toLocaleDateString()}\n          </Card.Footer>\n        </Card>\n      </MainScreen>\n    </Container>\n  );\n}\n\nexport default CreateNote;\n","import React, { useEffect, useState } from 'react';\nimport MainScreen from '../components/MainScreen';\nimport axios from 'axios';\nimport { Button, Card, Container, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteNoteAction, updateNoteAction } from '../actions/notesActions';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Loading from '../components/Loading';\nimport ReactMarkdown from 'react-markdown';\n\nfunction SingleNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState('');\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push('/mynotes');\n  };\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle('');\n    setCategory('');\n    setContent('');\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push('/mynotes');\n  };\n\n  return (\n    <Container>\n      <MainScreen title=\"Edit Note\">\n        <Card>\n          <Card.Header>Edit your Note</Card.Header>\n          <Card.Body>\n            <Form onSubmit={updateHandler}>\n              {loadingDelete && <Loading />}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              {errorDelete && (\n                <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  type=\"title\"\n                  placeholder=\"Enter the title\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"content\">\n                <Form.Label>Content</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Enter the content\"\n                  rows={4}\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                />\n              </Form.Group>\n              {content && (\n                <Card>\n                  <Card.Header>Note Preview</Card.Header>\n                  <Card.Body>\n                    <ReactMarkdown>{content}</ReactMarkdown>\n                  </Card.Body>\n                </Card>\n              )}\n\n              <Form.Group controlId=\"content\">\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                  type=\"content\"\n                  placeholder=\"Enter the Category\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Form.Group>\n              {loading && <Loading size={50} />}\n              <Button variant=\"primary\" type=\"submit\">\n                Update Note\n              </Button>\n              <Button\n                className=\"mx-2\"\n                variant=\"danger\"\n                onClick={() => deleteHandler(match.params.id)}\n              >\n                Delete Note\n              </Button>\n            </Form>\n          </Card.Body>\n\n          <Card.Footer className=\"text-muted\">\n            Updated on - {date.substring(0, 10)}\n          </Card.Footer>\n        </Card>\n      </MainScreen>\n    </Container>\n  );\n}\n\nexport default SingleNote;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap';\nimport MainScreen from '../components/MainScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../actions/userActions';\nimport Loading from '../components/Loading';\nimport ErrorMessage from '../components/ErrorMessage';\nimport styled from 'styled-components';\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'notezipper');\n      data.append('cloud_name', 'iamsuyash');\n      fetch('https://api.cloudinary.com/v1_1/iamsuyash/image/upload', {\n        method: 'post',\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage('Please Select an Image');\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <Container>\n      <MainScreen title=\"EDIT PROFILE\">\n        <div>\n          <Row className=\"profileContainer\">\n            <Col md={6}>\n              <Form onSubmit={submitHandler}>\n                {loading && <Loading />}\n                {success && (\n                  <ErrorMessage variant=\"success\">\n                    Updated Successfully\n                  </ErrorMessage>\n                )}\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>{' '}\n                {picMessage && (\n                  <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n                )}\n                <Form.Group controlId=\"pic\">\n                  <Form.Label>Change Profile Picture</Form.Label>\n                  <Form.File\n                    onChange={(e) => postDetails(e.target.files[0])}\n                    id=\"custom-file\"\n                    type=\"image/png\"\n                    label=\"Upload Profile Picture\"\n                    custom\n                  />\n                </Form.Group>\n                <Button type=\"submit\" varient=\"primary\">\n                  Update\n                </Button>\n              </Form>\n            </Col>\n            <Col\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProfileImage src={pic} alt={name} className=\"profilePic\" />\n            </Col>\n          </Row>\n        </div>\n      </MainScreen>\n    </Container>\n  );\n};\nconst ProfileImage = styled.img`\n  width: 60%;\n  display: flex;\n  align-items: center;\n  padding: 20px;\n`;\nexport default ProfileScreen;\n","import './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LandingPage from './screens/LandingPage';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport MyNotes from './screens/MyNotes';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport CreateNote from './screens/CreateNote';\nimport SingleNote from './screens/SingleNote';\nimport { useState } from 'react';\nimport ProfileScreen from './screens/ProfileScreen';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header setSearch={(s) => setSearch(s)} />\n        <main>\n          <Route path=\"/\" component={LandingPage} exact />\n          <Route path=\"/login\" component={LoginScreen} exact />\n          <Route path=\"/profile\" component={ProfileScreen} exact />\n          <Route path=\"/register\" component={RegisterScreen} exact />\n          <Route path=\"/createnote\" component={CreateNote} exact />\n          <Route path=\"/note/:id\" component={SingleNote} exact />\n          <Route\n            path=\"/mynotes\"\n            component={({ history }) => (\n              <MyNotes search={search} history={history} />\n            )}\n          />\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from './reducers/notesReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\n\nconst reducers = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCreate: noteCreateReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\nexport default store;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from '../constants/notesConstants';\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}